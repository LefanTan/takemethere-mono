// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  // Will be used for users' unique link. Ex. takeme.blog/lefan
  username String @unique
  email    String @unique
  plan     PLAN   @default(FREE)

  displayName String
  bio         String?

  tiktokUrl     String?
  instagramUrl  String?
  youtubeUrl    String?
  facebookUrl   String?
  twitterUrl    String?
  externalEmail String?

  profileMediaUrl String?

  page Page?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Page {
  id String @id @default(uuid())

  // Decide how the sections and links are categorized within the page
  pageEntries PageEntry[]

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

// PageEntry represents a row in the page structure
// A PageEntry should only be associated with either ONE of title, blog or link
model PageEntry {
  id    String  @id @default(uuid())
  title String?

  link Link?
  blog Blog?

  // Highest order number starts at the top
  order Int @default(0)

  page   Page   @relation(fields: [pageId], references: [id], onDelete: Cascade)
  pageId String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Link {
  id          String @id @default(uuid())
  displayText String
  link        String

  pageEntryId String    @unique
  pageEntry   PageEntry @relation(fields: [pageEntryId], references: [id], onDelete: Cascade)

  // Google Storage url
  mediaUrl       String?
  entryAnalytics EntryAnalytics?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Blog {
  id           String  @id @default(uuid())
  name         String
  rating       Float?
  location     String?
  externalLink String?

  pageEntryId String    @unique
  pageEntry   PageEntry @relation(fields: [pageEntryId], references: [id], onDelete: Cascade)

  // Google Storage url
  mediaUrl       String?
  entryAnalytics EntryAnalytics?

  shortReview     String?
  firstButtonText String?
  firstButtonLink String?

  secondButtonText String?
  secondButtonLink String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

// Analytics for individual link/blogs
model EntryAnalytics {
  id             String @id @default(uuid())
  lifetimeClicks Int    @default(0)

  blog   Blog?  @relation(fields: [blogId], references: [id], onDelete: Cascade)
  blogId String @unique

  link   Link?  @relation(fields: [linkId], references: [id], onDelete: Cascade)
  linkId String @unique
}

enum PLAN {
  FREE
  PREMIUM
}
