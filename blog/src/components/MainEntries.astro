---
import { PageEntriesWithBlogAndLink } from "@common/types/client";
import TruncatedText from "./TruncatedText.vue";

export interface Props {
  pageEntries: PageEntriesWithBlogAndLink[];
}

const { pageEntries } = Astro.props;
---

<>
  {
    pageEntries.map((entry) => {
      // Is a Category entry
      if (entry.title || entry.title === "") {
        return <h2 class="mb-4 mt-6">{entry.title}</h2>;
      }

      if (entry.blog) {
        return (
          // Blog Entry
          <div class="flex flex-col rounded-lg ring-black-2 overflow-hidden mb-4">
            <div class="flex flex-1">
              {entry.blog.mediaUrl && (
                <img
                  src={entry.blog.mediaUrl}
                  class="w-20 sm:w-36 object-cover"
                  alt={entry.blog.name}
                />
              )}
              <div class="p-2 flex flex-col flex-1">
                <h3 class="font-medium">{entry.blog.name}</h3>

                <div class="flex items-start flex-1 mt-2">
                  <p class="font-light text-sm sm:text-base leading-none">
                    {entry.blog.location}
                  </p>

                  {(entry.blog.rating ?? -1) >= 0 && (
                    <h4 class="text-4xl shrink-0 mt-auto ml-auto">
                      {entry.blog.rating}
                      <span class="text-base -ml-1">/ 10</span>
                    </h4>
                  )}
                </div>
              </div>
            </div>
            <div class="flex flex-col p-2">
              {entry.blog.firstButtonText && (
                <a
                  href={entry.blog.firstButtonLink}
                  target="_blank"
                  class="bg-black rounded-md mb-2 p-1 text-white text-sm text-center"
                >
                  {entry.blog.firstButtonText}
                </a>
              )}
              {entry.blog.secondButtonText && (
                <a
                  href={entry.blog.secondButtonLink}
                  target="_blank"
                  class="bg-secondary-light rounded-md mb-2 p-1 text-sm text-center"
                >
                  {entry.blog.secondButtonText}
                </a>
              )}
              {entry.blog.shortReview && (
                <TruncatedText
                  client:idle
                  text={entry.blog.shortReview}
                  className="text-sm sm:text-base leading-tight"
                />
              )}
            </div>
          </div>
        );
      }

      if (entry.link.link && entry.link.displayText) {
        return (
          <a
            href={entry.link.link}
            target="_blank"
            class="flex rounded-lg ring-black-2 overflow-hidden mb-4"
          >
            {entry.link.mediaUrl && (
              <img
                src={entry.link.mediaUrl}
                alt=""
                class="w-16 full object-cover"
              />
            )}

            <p
              class:list={[
                "p-4 text-lg text-center flex items-center justify-center flex-1",
              ]}
            >
              {entry.link.displayText}
            </p>
          </a>
        );
      }
    })
  }
</>
